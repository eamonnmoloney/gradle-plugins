apply plugin: 'idea'

final kotlinVersion     = '0.1-SNAPSHOT' // http://repository.jetbrains.com/kotlin/org/jetbrains/kotlin/kotlin-runtime/
final gcontractsVersion = '1.2.5'        // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.gcontracts%22%20AND%20a%3A%22gcontracts-core%22
final junitVersion      = '4.10'         // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22junit%22%20AND%20a%3A%22junit%22


defaultTasks 'clean', 'codenarc', 'groovydoc', 'build', 'install'


ext.codenarcRuleSetFiles = [ 'codenarc.groovy' ]
ext.codenarcExtensions   = [ '**/*.groovy'     ]
ext.codenarcSources      = [ 'general/src/main/groovy', 'kotlin/src/main/groovy' ]
apply from: "file:src/main/groovy/CodeNarc.gradle"


idea.project {
    jdkName = '1.6'
    ipr.withXml { provider -> provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git' }
}


idea.module {
    iml.withXml {
        provider ->
        provider.node.component.content.first().with {
            appendNode( 'excludeFolder', [ url : 'file://$MODULE_DIR$/gradle' ])
            appendNode( 'excludeFolder', [ url : 'file://$MODULE_DIR$/out'    ])
        }
    }
}


subprojects {

    apply plugin: 'idea'
    apply plugin: 'groovy'
    apply plugin: 'maven'


    sourceCompatibility = 1.6
    group               = 'com.github.goldin.plugins'


    repositories {
        mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/'
    }

    dependencies {
        groovy      localGroovy()
        compile     gradleApi(),
                    "org.gcontracts:gcontracts-core:$gcontractsVersion"
        testCompile "junit:junit:$junitVersion"
    }

    idea.module {
        downloadSources = true
        downloadJavadoc = true
    }

    /**
     * Adding sources and groovydocs
     */

    task sourcesJar( type: Jar, dependsOn: classes ) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task groovydocJar( type: Jar, dependsOn: groovydoc ) {
         classifier = 'javadoc'
         from groovydoc.destinationDir
    }

    artifacts {
         archives sourcesJar
         archives groovydocJar
    }
}


project( ':kotlin' ) {
    dependencies {
        compile "org.jetbrains.kotlin:kotlin-compiler:$kotlinVersion",
                "org.jetbrains.kotlin:kdoc:$kotlinVersion"
    }
}


task wrapper( type: Wrapper ) { gradleVersion = '1.0' }
